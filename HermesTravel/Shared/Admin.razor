@page "/Admin"

@using HermesTravel.Data
@using HermesTravel.Pages
@using DataAccessHermesTravel
@inject ISqlDataAccess _data
@inject IConfiguration _config
@inject User user
@inject NavigationManager helper

<!DOCTYPE html>
<html lang="pt">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HermesTravel</title>
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="css/site.css" rel="stylesheet" />
    <link href="HermesTravel.styles.css" rel="stylesheet" />

    <style>
        .img {
            border: 2px solid #06263d;
            border-radius: 10%;
            background-color: white;
        }

        .navbar {
            border-bottom: 2px solid #06263d;
        }

        .titleText {
            color: #06263d;
            font-size: 50px;
            padding-left: 15px;
            margin-top: 5px;
            margin-bottom: 35px;
        }

        .exitB {
            color: black;
            font-weight: bold;
            padding: 10px 57px;
        }

        .exitB:hover {
            transition: background-color 0.25s;
            background-color: #b04848;
            color: black;
            cursor: pointer;
        }

        .progress {
            height: 40px;
            width: 40%;
            border: 1px solid #06263d;
            margin: 0 auto;
        }

        .progress-bar {
            background-color: #f9932f;
        }

        .avatar {
            height: 240px;
            width: 240px;
            border: 2px solid #06263d;
            border-radius: 5%;
            margin: 10px auto 10px;
        }

        .userInfo {
            font-size: 30px;
            margin: 0 auto;
        }

        .searchCol {
            margin-top: 100px;
            width: 400px;
        }

        .spanF {
            background-color: #f9932f;
            border: 3px solid #06263d;
            border-radius: 10%;
            width: 150px;
            line-height: 40px;
            font-weight: bold;
            display: inline-block;
            text-align: center;
        }

        .spanF-big {
            background-color: #f9932f;
            border: 3px solid #06263d;
            border-radius: 10%;
            width: 395px;
            line-height: 40px;
            font-weight: bold;
            display: inline-block;
            text-align: center;
        }

        .spanF-big-top {
            background-color: #f9932f;
            border: 3px solid #06263d;
            border-radius: 10%;
            width: 250px;
            line-height: 100px;
            font-weight: bold;
            display: inline-block;
            text-align: center;
        }

        hr {
            background-color: #06263d;
            border: 0 none;
            color: #06263d;
            height: 1px;
            margin: 20px auto;
            width: 75%;
        }

        .littleHR {
            width: 50%;
            margin-top: 130px;
        }

        .buttons {
            margin-top: 25px;
        }

        .btn-aux {
            width: 320px;
        }

        .infoCol {
            border: 2px solid #06263d;
            background-color: #f9932f;
            border-radius: 5%;
        }

        .infoCol>p {
            border-bottom: 2px solid #06263d;
        }

        .infoCol>p:last-child {
            border-bottom: none;
        }

        .pointIMG {
            height: 240px;
            width: 400px;
            border: 2px solid #06263d;
            border-radius: 5%;
            margin-left: 100px;
        }

        .friends {
            margin-top: 50px;
            margin-left: 125px;
        }

        .vertical-scrollable>.row {
            position: absolute;
            width: 700px;
            height: 300px;
            overflow-y: scroll;
        }

        .col-sm-8 {
            border: 2px solid #06263d;
            margin-left: 225px;
            padding: 5px 15px 0 15px;
            font-size: 20px;
        }

        @@media (max-width: 767.98px) {
            .container {
                max-width: 350px;
            }

            .avatar {
                height: 150px;
                width: 150px;
            }
        }
    </style>
</head>

<body>
    <nav class="navbar">
        <div class="container-fluid">
            <a class="navbar-brand" href="Home">
                <img src="./images/logo.png" width="50" height="75" class="img img-aux d-inline-block align-top" alt="">
                <span class="titleText fw-bold">HermesTravel</span>
            </a>
            <EditForm Model="logout" OnValidSubmit="@deleteUser">
                <input class="btn btn-primary exitB" type="submit" value="Terminar Sessão" />
            </EditForm>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="userInfo">
            <p class="fw-bold fs-2 spanF-big-top">ADMIN</p>
            <p class="fw-bold mt-1">@user.email</p>
        </div>
    </div>

    <hr>

    <div class="container">
        <div class="mt-4">
            <p class="spanF-big fs-5">Sugestão de pontos</p>
        </div>
    </div>

    <div class="container">
        @if (status <= 3)
        {
            <div class="row">
                <div class="col-6 searchCol">
                    @if (status == 1)
                    {
                        <div class="mt-0">
                            <p class="spanF-big fs-5">Ponto sugerido não existe!! Insira outro.</p>
                        </div>
                    }
                    <EditForm Model="interestpointI" OnValidSubmit="getInterestPoint">
                        <div class="input-group mt-4">
                            <InputText @bind-Value="interestpointI.inputA" class="form-control" type="text"
                            placeholder="Insira o nome de um ponto sugerido" required>
                            </InputText>
                        </div>
                        <input class="btn btn-secundary btn-aux fw-bold" type="submit" value="Obter rota" />
                    </EditForm>
                </div>
                <div class="col-6 friends">
                    <div class="container vertical-scrollable" tabindex="0">
                        <div class="row text-start">
                            @{
                                //callingCreateSuggestionsPoints();
                                foreach (var c in suggestions)
                                {
                                    <div class="col-sm-8">@c.cidade - @c.nome</div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row mt-5">
                <div class="col-5 text-start infoCol">
                    <p class="fs-6 mt-3"><span class="fw-bold">Nome: </span></p>
                    <p class="fs-6"><span class="fw-bold">Cidade: </span></p>
                    <p class="fs-6"><span class="fw-bold">Descrição: </span></p>
                    <p class="fs-6"><span class="fw-bold">Categorias: </span></p>
                    <p class="fs-6 mb-0"><span class="fw-bold">Coordenadas: </span></p>
                </div>
                <div class="col-7">
                    <img class="img-fluid pointIMG" src="">
                </div>
            </div>
            <div class="row align-items-center">
                <div class="col-6 mt-4">
                    <EditForm Model="status" OnValidSubmit="@AcceptSuggestion">
                        <input class="btn btn-secundary btn-aux fw-bold" type="submit" value="Aceitar sugestão" />
                    </EditForm>
                </div>
                <div class="col-6 mt-4">
                    <EditForm Model="status" OnValidSubmit="@RejectSuggestion">
                        <input class="btn btn-secundary btn-aux fw-bold" type="submit" value="Rejeitar sugestão" />
                    </EditForm>
                </div>
            </div>
        }
    </div>

    <hr class="littleHR">

    <div class="container">
        <div class="mt-4">
            <p class="spanF-big fs-5">Remoção de pontos</p>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-6 searchCol">
                @if (status == 2)
                {
                    <div class="mt-0">
                        <p class="spanF-big fs-5">Ponto removido com sucesso!!</p>
                        <EditForm Model="status" OnValidSubmit="@RemoveAgain">
                            <input class="btn btn-secundary btn-aux fw-bold mt-4" type="submit"
                            value="Remover outro ponto" />
                        </EditForm>
                    </div>
                }
                else if (status == 3)
                {
                    <div class="mt-4">
                        <p class="spanF-big fs-5">Ponto não existe!! Insira outro.</p>
                    </div>
                }
                else
                {
                    <EditForm Model="interestpointI" OnValidSubmit="RemovePoint">
                        <div class="input-group mt-4">
                            <InputText @bind-Value="interestpointI.inputB" class="form-control" type="text"
                            placeholder="Insira o nome de um ponto" required>
                            </InputText>
                        </div>
                        <input class="btn btn-secundary btn-aux fw-bold" type="submit" value="Remover ponto" />
                    </EditForm>
                }
            </div>
            <div class="col-6 friends">
                <div class="container vertical-scrollable" tabindex="0">
                    <div class="row text-start">
                        @{
                            //callingCreateInterestPoints();
                            foreach (var c in interestpoints)
                            {
                                <div class="col-sm-8">@c.cidade - @c.nome</div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

</html>

@code {
    public class interestPointInput
    {
        public string inputA { get; set; }
        public string inputB { get; set; }
    }

    interestPointInput interestpointI = new interestPointInput();

    string logout = "";
    int status = 0;

    List<InterestPoint> suggestions = new List<InterestPoint>();
    List<InterestPoint> interestpoints = new List<InterestPoint>();

    private void getInterestPoint()
    {
        // SE PONTO INTRODUZIDO NÃO EXISTE (status = 1)
        // status = 1;

        // SE OBTEVE PONTO CORRETO (status = 4)
        status = 4;
        helper.NavigateTo("Admin");
    }

    private bool callingCreateSuggestionsPoints()
    {
        createSuggestionsPoints();
        return true;
    }

    private async void createSuggestionsPoints() // ALTERAR PARA TABELA COM SUGESTÕES
    {
        string sqlpoints = "SELECT * FROM mydb.pontointeresse WHERE valido = 1";
        suggestions = await _data.LoadData<InterestPoint, dynamic>(sqlpoints, new { },
        _config.GetConnectionString("default"));
    }

    private bool callingCreateInterestPoints()
    {
        createInterestPoints();
        return true;
    }

    private async void createInterestPoints()
    {
        string sqlpoints = "SELECT * FROM mydb.pontointeresse WHERE valido = 1";
        interestpoints = await _data.LoadData<InterestPoint, dynamic>(sqlpoints, new { },
        _config.GetConnectionString("default"));
    }

    private void RejectSuggestion() // REJEITAR PONTO DE INTERESSE
    {
        status = 0;
        helper.NavigateTo("Admin");
    }

    private void AcceptSuggestion() // ADICIONAR PONTO DE INTERESSE
    {
        status = 0;
        helper.NavigateTo("Admin");
    }

    private void RemoveAgain()
    {
        if (status == 1)
            status = 1;
        else if (status == 4)
            status = 4;
        else
            status = 0;
        helper.NavigateTo("Admin");
    }

    private void RemovePoint()
    {
        // SE PONTO INSERIDO FOR INVÁLIDO (status = 3)
        // status = 3;
        // SE PONTO INSERIDO TIVER SIDO REMOVIDO COM SUCESSO (status = 2)
        status = 2;
        helper.NavigateTo("Admin");
    }

    private async void deleteUser()
    {
        string sqlS = "UPDATE mydb.utilizador SET login = 0 WHERE email=@Email";
        await _data.SaveData(sqlS, new { Email = user.email }, _config.GetConnectionString("default"));
        user.deleteUser();
        helper.NavigateTo("/", true);
    }
}