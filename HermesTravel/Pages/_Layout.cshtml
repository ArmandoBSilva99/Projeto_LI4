@using Microsoft.AspNetCore.Components.Web
@namespace HermesTravel.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="HermesTravel.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <div id="demo"></div>

    <script src="_framework/blazor.server.js"></script>

    <script src="https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyBqcDi6ocKOSz2bbk23A7jgIksedrGZNYo"></script>

<script>
    window.getLocation = (points) => {
        var s = "";
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var saux = position.coords;
                s = saux.latitude + "," + saux.longitude;
                var linkgoogle = "https://www.google.com/maps/dir/?api=1&origin=";
                var origin = s;
                var linkgoogle_o = linkgoogle + origin.replace(", ","%2C");
                var i;
                console.log(points.length);
                linkgoogle_o = linkgoogle_o + "&destination=" + points[points.length -1].replace(", ","%2C");
                if(points.length > 1)
                    linkgoogle_o = linkgoogle_o + "&waypoints=" + points[0].replace(", ","%2C");
                for (i = 1; i < points.length - 1; i++){
                    console.log("Vou adicionar waypoint!");
                    linkgoogle_o = linkgoogle_o + "%7C" + points[i].replace(", ","%2C");
                }
                console.log("Link final = "+linkgoogle_o);
                var x = document.getElementById("demo");
                x.innerHTML = "<a href="+linkgoogle_o+'><span class="spanF">Rota</span></a>';
            });
        }
    };

    function bestRoute(s, points)
    {
        var p = permutation(points);
        var result;
        for (int i = 0; i < p.length; i++)
        {

        }
    }

    function getLink(s, array)
    {
        var key = "&key=AIzaSyBqcDi6ocKOSz2bbk23A7jgIksedrGZNYo";
        var linkgoogle = "https://maps.googleapis.com/maps/api/directions/json?origin=" + s.replace(", ","%2C");
        var linkgoogle_o = linkgoogle + "&destination=" + array[array.length -1].replace(", ","%2C");
        if(array.length > 1)
            linkgoogle_o = linkgoogle_o + "&waypoints=" + array[0].replace(", ","%2C");
        int i;
        for (i = 1; i < array.length - 1; i++)
        {
            linkgoogle_o = linkgoogle_o + "%7C" + points[i].replace(", ","%2C");
        }
        linkgoogle_o = linkgoogle_o + key;
        return linkgoogle_o;
    }

    function getTime(s)
    {
        
    }

    function permutation(array) {
        function p(array, temp) {
            var i, x;
            if (!array.length) {
                result.push(temp);
            }
            for (i = 0; i < array.length; i++) {
                x = array.splice(i, 1)[0];
                p(array, temp.concat(x));
                array.splice(i, 0, x);
            }
        }
    var result = [];
    p(array, []);
    return result;
}

</script>
</body>
</html>
