@page "/Account"

@using HermesTravel.Data
@using HermesTravel.Pages
@inject NavigationManager helper
@inject User user
@using DataAccessHermesTravel
@inject ISqlDataAccess _data
@inject IConfiguration _config
@inject NavigationManager helper

<!DOCTYPE html>
<html lang="pt">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HermesTravel</title>
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="css/site.css" rel="stylesheet" />
    <link href="HermesTravel.styles.css" rel="stylesheet" />

    <style>
        .img {
            border: 2px solid #06263d;
            border-radius: 10%;
            background-color: white;
        }

        .navbar {
            border-bottom: 2px solid #06263d;
        }

        .titleText {
            color: #06263d;
            font-size: 50px;
            padding-left: 15px;
            margin-top: 5px;
            margin-bottom: 35px;
        }

        .exitB {
            color: black;
            font-weight: bold;
            padding: 10px 57px;
        }

        .exitB:hover {
            transition: background-color 0.25s;
            background-color: #b04848;
            color: black;
            cursor: pointer;
        }

        .progress {
            height: 40px;
            width: 40%;
            border: 1px solid #06263d;
            margin: 0 auto;
        }

        .progress-bar {
            background-color: #f9932f;
        }

        .avatar {
            height: 240px;
            width: 240px;
            border: 2px solid #06263d;
            border-radius: 5%;
            margin: 10px 10px 10px;
        }

        .userInfo {
            text-overflow: ellipsis;
            text-align: left;
            font-size: 30px;
            margin: auto 0;
        }

        .userInfo>:nth-of-type(3) {
            margin: 40px 0 20px;
        }

        .userInfo>:nth-of-type(4) {
            margin: 20px 0 10px;
        }

        .spanF {
            background-color: #f9932f;
            border: 3px solid #06263d;
            border-radius: 100%;
            padding: 5px 5px;
            font-weight: bold;
        }

        hr {
            background-color: #06263d;
            border: 0 none;
            color: #06263d;
            height: 1px;
            margin: 20px auto;
            width: 75%;
        }

        .buttons {
            margin-top: 90px;
        }

        .buttonsCol>a:nth-of-type(1) {
            margin-bottom: 25px;
            width: 400px;
        }

        .btnInput {
            margin-top: 25px;
            width: 400px;
        }

        .btn-aux {
            margin-top: 10px;
            padding: 5px 30px;
        }

        @@media (max-width: 767.98px) {
            .container {
                max-width: 350px;
            }

            .avatar {
                height: 150px;
                width: 150px;
            }

            .userInfo {
                width: 150px;
            }
        }
    </style>
</head>

<body>
    <nav class="navbar">
        <div class="container-fluid">
            <a class="navbar-brand" href="Home">
                <img src="./images/logo.png" width="50" height="75" class="img img-aux d-inline-block align-top" alt="">
                <span class="titleText fw-bold">HermesTravel</span>
            </a>
            <a class="btn btn-primary exitB" href="/">Terminar Sessão</a>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="row align-items-start">
            <div class="col-4">
                <div class="progress">
                    <div class="progress-bar progress-bar-striped" role="progressbar" style="width: @user.calculateLevel().Item2" aria-valuenow="@user.calculateLevel().Item1"
                        aria-valuemin="0" aria-valuemax="100"></div>
                </div>
                <img class="img-fluid avatar" src="@user.imagemURL">
            </div>
            <div class="col-4 align-self-center">
                <div class="userInfo">
                    <p class="fw-bold mt-2 mb-0">@user.nome</p>
                    <p class="fs-5">@user.email</p>
                    <p class="fs-5"><span class="spanF">@user.getFriends().Count()</span> Amigos</p>
                </div>
            </div>
            @if (status == 1)
            {
                <div class="col-4 align-self-center">
                    <EditForm Model="userinput" OnValidSubmit="@ChangeAvatar">
                        <div class="input-group">
                            <InputText @bind-Value="userinput.inputA" class="form-control" type="text"
                            placeholder="URL imagem" required></InputText>
                        </div>
                        <input class="btn btn-secundary btn-aux fw-bold" type="submit" value="Confirmar" />
                        @{
                            status = 0;
                        }
                    </EditForm>
                </div>
            }
            else if (status == 2)
            {
                <div class="col-4 align-self-center">
                    <EditForm Model="userinput" OnValidSubmit="@ChangePW">
                        <div class="input-group">
                            <InputText @bind-Value="userinput.inputB" class="form-control" type="password"
                            placeholder="Nova password" required></InputText>
                        </div>
                        <input class="btn btn-secundary btn-aux fw-bold" type="submit" value="Confirmar" />
                        @{
                            status = 0;
                        }
                    </EditForm>
                </div>
            }
        </div>
    </div>

    <hr>

    <div class="container">
        <div class="row buttons">
            <div class="col-6 buttonsCol">
                <a class="btn btn-secundary fw-bold" href="Account/Friends">Amigos</a>
                <p class="mb-0">
                    <EditForm Model="userinput" OnValidSubmit="@ChangeAvatarStatus">
                        <input class="btn btn-secundary btnInput fw-bold" href="Account" type="submit"
                            value="Alterar avatar" />
                    </EditForm>
                </p>
            </div>
            <div class="col-6 buttonsCol">
                <a class="btn btn-secundary fw-bold" href="Account/FavoritePoints">Pontos de Interesse favoritos</a>
                <p class="mb-0">
                    <EditForm Model="userinput" OnValidSubmit="@ChangePWStatus">
                        <input class="btn btn-secundary btnInput fw-bold" href="Account" type="submit"
                            value="Alterar password" />
                    </EditForm>
                </p>
            </div>
        </div>
    </div>

    <div class="container buttons">
        <a class="btn btn-secundary fw-bold" href="Home">Página inicial</a>
    </div>
</body>

</html>

@code
{
    public class userInput
    {
        public string inputA { get; set; }
        public string inputB { get; set; }
    }

    int status = 0;
    userInput userinput = new userInput();

    private void ChangeAvatarStatus()
    {
        status = 1;
    }

    private void ChangePWStatus()
    {
        status = 2;
    }

    private async void ChangeAvatar()
    {
        user.setAvatar(userinput.inputA);
        string sqlS = "UPDATE mydb.utilizador set imagemURL = @Avatar WHERE email=@Email";
        await _data.SaveData(sqlS, new {Avatar = userinput.inputA, Email = user.email}, _config.GetConnectionString("default"));
        status = 0;
        helper.NavigateTo("/Account");
    }

    private async void ChangePW()
    {
        if (userinput.inputB.Length > 6)
        {
            user.setPassword(userinput.inputB);
            string sqlS = "UPDATE mydb.utilizador set password = @Password WHERE email=@Email";
            await _data.SaveData(sqlS, new {Password = userinput.inputB, Email = user.email}, _config.GetConnectionString("default"));
            status = 0;
            helper.NavigateTo("/Account");
        }
        else
        {
            status = -1; // altera Andre!
        }
    }
}